<?xml version="1.0" encoding="utf-8"?>
<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->
<!--
Modified by Anirudh Sasikumar (http://anirudhs.chaosnet.org/)
-->
<!--
/*
* The contents of this file are subject to the Mozilla Public License Version
* 1.1 (the "License"); you may not use this file except in compliance with
* the License. You may obtain a copy of the License at
* http://www.mozilla.org/MPL/
*
* Software distributed under the License is distributed on an "AS IS" basis,
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
* for the specific language governing rights and limitations under the
* License.
*
* The Original Code is the ScopedNavigation component.
*
* The Initial Developer of the Original Code is
* Anirudh Sasikumar (http://anirudhs.chaosnet.org/).
* Portions created by the Initial Developer are Copyright (C) 2008
* the Initial Developer. All Rights Reserved.
*
* Contributor(s):
*
*/
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:layout="net.anirudh.layout.*"
		alpha.disabled=".5"> 
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("net.anirudh.controls.ScopedDropDown")]
		]]>
	</fx:Metadata> 
	
	<fx:Script>
		<![CDATA[
	
	
			/* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
			static private const contentFill:Array = ["bgFill"];
			
			/**
			 * @inheritDoc
			 */
			override public function get contentItems():Array {return contentFill};
	
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="open" />
		<s:State name="disabled" />
	</s:states>
			
	<!--- 
	The PopUpAnchor control that opens the drop-down list. 
	-->
	<s:PopUpAnchor id="popUp"  displayPopUp.normal="false" displayPopUp.open="true" includeIn="open"
				   left="0" right="0" top="0" bottom="0" itemDestructionPolicy="auto"
				   popUpPosition="topLeft" popUpWidthMatchesAnchorWidth="false">
		
		<!--- 
		The drop down area of the skin. 
		This includes borders, background colors, scrollers, and filters. 
		-->
		<s:Group id="dropDown" minHeight="22" >
			
			<!-- draw a full rect to the top left of the popup -->
			<s:Rect width="24" height="20" left="-24" top="0"
					fill="{bgFill}"
					/>
			<!-- draw over the rect leaving only rounded corners -->
			<s:Rect width="24" height="20" left="-24" top="0" 
					topRightRadiusX="12" topRightRadiusY="10"					
					>
				<s:fill>					
					<s:SolidColor color="{getStyle('eraseColor')}" />
				</s:fill>
			</s:Rect>
			<!-- draw a full rect to the top right of the popup -->
			<s:Rect width="24" height="20" right="-24" top="0" 
					fill="{bgFill}"
					>
			
			</s:Rect>
			<!-- draw over the rect leaving only rounded corners -->
			<s:Rect width="24" height="20" right="-24" top="0" 
					topLeftRadiusX="12" topLeftRadiusY="10"					
					>
				<s:fill >
					<s:SolidColor color="{getStyle('eraseColor')}" />
				</s:fill>
			</s:Rect>
		
			<!-- drop shadow -->
			<s:RectangularDropShadow id="dropShadow" blurX="20" blurY="20" alpha="0.6" distance="5" 
									 angle="90" color="#000000" left="0" top="20" right="0" bottom="20"
									
									 />
			
			<!-- border -->
			<!--<s:Rect id="border" left="0" right="0" top="0" bottom="0">
				<s:stroke>
					<s:SolidColorStroke color="{getStyle('borderColor')}"
										alpha="{getStyle('borderAlpha')}"
										weight="1"/>
				</s:stroke>
			</s:Rect>-->
			
			<!-- fill -->
			<!---  
			Defines the appearance of drop-down list's background fill.
			-->
			<s:Rect id="background" left="0" right="0" top="0" bottom="0" 
					bottomLeftRadiusX="18" bottomLeftRadiusY="20"
					bottomRightRadiusX="18" bottomRightRadiusY="20"
					>
				<s:fill>
					<!---  
					The color of the drop down's background fill.
					The default color is 0xFFFFFF.
					-->
					<s:SolidColor id="bgFill" color="0x172322" />
				</s:fill>
			</s:Rect>
			
			<s:Scroller id="scroller" left="18" top="10" right="18" bottom="20" focusEnabled="false" minViewportInset="0">
				<!---  
				The container for the data items in the drop-down list.
				-->
				<s:DataGroup id="dataGroup" itemRenderer="spark.skins.spark.DefaultItemRenderer">
					<s:layout>
						<layout:VerticalSeparatorLayout gap="10" horizontalAlign="contentJustify"/>
					</s:layout>
				</s:DataGroup> 
			</s:Scroller>
		</s:Group>
	</s:PopUpAnchor>
	
	<!--- The anchor button used by the DropDownList. The default skin is DropDownListButtonSkin. -->
	<s:Button id="openButton" left="0" right="0" top="0" bottom="0" focusEnabled="false"
			  skinClass="spark.skins.spark.DropDownListButtonSkin" visible="false" />  
	<!--- The prompt area of the DropDownList. -->
	<s:Label id="labelDisplay" verticalAlign="middle" maxDisplayedLines="1" 
			 mouseEnabled="false" mouseChildren="false"
			 left="7" right="30" top="2" bottom="2" width="75" verticalCenter="1" visible="false" /> 
	
</s:SparkSkin>
